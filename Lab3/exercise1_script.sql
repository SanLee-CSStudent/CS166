--EXERCISE 1
DROP TABLE IF EXISTS Professor;
DROP TABLE IF EXISTS Project;
DROP TABLE IF EXISTS Dept;
DROP TABLE IF EXISTS Graduate;

--entities
CREATE TABLE Professor(prof_SSN NUMERIC(10, 0), name TEXT, age REAL, rank REAL, specialty TEXT, PRIMARY KEY(prof_SSN));
CREATE TABLE Project(PNO INT, sponsor TEXT, start_date DATE, end_date DATE, budget REAL, PRIMARY KEY(PNO));
CREATE TABLE Dept(DNO INT, dname TEXT, office TEXT, PRIMARY KEY(DNO));
CREATE TABLE Graduate(grad_SSN NUMERIC(10, 0), name TEXT, age REAL, degree TEXT, PRIMARY KEY(grad_SSN));

--relationships
CREATE TABLE work_in(prof_SSN NUMERIC(10, 0), PNO INT, PRIMARY KEY(prof_SSN, PNO), FOREIGN KEY(prof_SSN) REFERENCES Professor, FOREIGN KEY(PNO) REFERENCES Project);
CREATE TABLE manage(prof_SSN NUMERIC(10, 0), PNO INT, PRIMARY KEY(PNO), FOREIGN KEY(prof_SSN) REFERENCES Professor, FOREIGN KEY(PNO) REFERENCES Project);
CREATE TABLE supervise(prof_SSN NUMERIC(10, 0), PNO INT, grad_SSN NUMERIC(10, 0), PRIMARY KEY(PNO, grad_SSN), FOREIGN KEY(prof_SSN) REFERENCES Professor, FOREIGN KEY(PNO) REFERENCES Project, FOREIGN KEY(grad_SSN) REFERENCES Graduate);

CREATE TABLE work_dept(time_pc INT, prof_SSN NUMERIC(10, 0), DNO INTEGER, PRIMARY KEY(prof_SSN, DNO), FOREIGN KEY(prof_SSN) REFERENCES Professor, FOREIGN KEY(DNO) REFERENCES Dept);
CREATE TABLE runs(prof_SSN NUMERIC(10, 0), DNO INTEGER, PRIMARY KEY(DNO), FOREIGN KEY(prof_SSN) REFERENCES Professor, FOREIGN KEY(DNO) REFERENCES Dept);

CREATE TABLE major(grad_SSN NUMERIC(10, 0), DNO INT, PRIMARY KEY(grad_SSN), FOREIGN KEY(grad_SSN) REFERENCES Graduate, FOREIGN KEY(DNO) REFERENCES Dept);

CREATE TABLE work_proj(since DATE, grad_SSN NUMERIC(10, 0), PNO INT, PRIMARY KEY(grad_SSN, PNO), FOREIGN KEY(grad_SSN) REFERENCES Graduate, FOREIGN KEY(PNO) REFERENCES Project);

CREATE TABLE advise(senior_SSN NUMERIC(10, 0), grad_SSN NUMERIC(10, 0), PRIMARY KEY(grad_SSN), FOREIGN KEY(senior_SSN) REFERENCES Graduate, FOREIGN KEY(grad_SSN) REFERENCES Graduate);